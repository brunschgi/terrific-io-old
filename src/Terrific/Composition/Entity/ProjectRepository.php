<?php

namespace Terrific\Composition\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository
{
    public function get($user, $id)
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT p FROM TerrificComposition:Project p WHERE id = :id AND p.user = :user')
            ->setParammeter('id', $id)
            ->setParameter('user', $user)
            ->setMaxResults(1);

        return $query->getResult();
    }

    public function create($user, $project) {
        $em = $this->getEntityManager();

        $project->setUser($user);
        // create some default values
        $project->setName('Lab');

        $style = $project->getStyle();
        if(!$style) {
            $style = new Snippet();
        }
        $style->setMode('text/css');
        $style->setCode('');

        $script = $project->getScript();
        if(!$script) {
            $script = new Snippet();
        }

        $script->setMode('text/javascript');
        $script->setCode('');

        // persist it
        $em->persist($style);
        $em->persist($script);

        $em->persist($project);
        $em->flush();

        return $project;
    }

    public function update($id, $tmpProject) {
        $em = $this->getEntityManager();

        $project = $this->find($id);

        $project->setName($tmpProject->getName());
        $project->setStyle($tmpProject->getStyle());
        $project->setScript($tmpProject->getScript());

        $em->flush();

        return $project;
    }

    public function delete($id) {
        $em = $this->getEntityManager();

        $project = $this->find($id);

        $em->remove($project);
        $em->flush();
    }

    public function getPage($user, $page) {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT p FROM TerrificComposition:Project p WHERE p.user = :user')
            ->setParameter('user', $user)
            ->setFirstResult(($page - 1) * 10)
            ->setMaxResults(10);

        return $query->getResult();
    }
}
