<?php

namespace Terrific\Composition\Entity;

use Doctrine\ORM\EntityRepository;
use Terrific\Composition\Entity\Snippet;
use Terrific\Composition\Entity\Module;

/**
 * ModuleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ModuleRepository extends EntityRepository
{
    public function create($module) {
        $em = $this->getEntityManager();

        // create some default values
        $module->setTitle('My new experiment');
        $module->setDescription('Psstâ€¦ please give away a secret about your experiment');

        $markup = $module->getMarkup();
        if(!$markup) {
            $markup = new Snippet();
        }
        $markup->setMode('text/html');
        $markup->setCode('<div class="mod mod-draft">Test</div>');

        $style = $module->getStyle();
        if(!$style) {
            $style = new Snippet();
        }
        $style->setMode('text/css');
        $style->setCode('.mod-draft { color: navy }');

        $script = $module->getScript();
        if(!$script) {
            $script = new Snippet();
        }
        $script->setMode('text/javascript');
        $script->setCode('');

        // persist it
        $em->persist($markup);
        $em->persist($style);
        $em->persist($script);

        $em->persist($module);
        $em->flush();

        return $module;
    }

    public function update($id, $tmpModule) {
        $em = $this->getEntityManager();

        $module = $this->find($id);

        $module->setTitle($tmpModule->getTitle());
        $module->setDescription($tmpModule->getDescription());
        $module->setMarkup($tmpModule->getMarkup());
        $module->setStyle($tmpModule->getStyle());
        $module->setScript($tmpModule->getScript());

        $em->flush();

        return $module;
    }

    public function delete($id) {
        $em = $this->getEntityManager();

        $module = $this->find($id);

        $em->remove($module);
        $em->flush();
    }

    public function findPage($type, $page) {
        $em = $this->getEntityManager();

        $query = $em->createQuery("SELECT m FROM TerrificComposition:Module m")
            ->setFirstResult(($page - 1) * 10)
            ->setMaxResults(10);

        return $query->getResult();
    }
}